name: Master Template

on: 
  pull_request:
    branches:
      - main
      - dev
  #push:
  #  branches:
  #    - main
  #Schedule can use a cron expression to trigger a workflow at a specific time of day
  #Only runs on the main branch
  #Runs only once per every 5 minutes
  release:
    types: [published, created]
  #schedule:
    #Runs at 5:30 only on Monday and Wednesday
    #- cron: '30 5 * * 1,3'
    #Runs at 05:30, on day 1 of the month, and on Tuesday and Thursday.
    #- cron: '30 5 1 * 2,4'
    #Runs every 5 minutes (not 3)
    #- cron: '*/3 * * * *'
  #Manual Event
  #Up to 10 inputs
  workflow_dispatch:
    inputs:
      some_variable_name:
        description: 'Some description of the variable'
        required: true
        type: string
      some_other_variable_name:
        description: 'Some description of the variable'
        required: true
        type: string
  #You can trigger a workflow via an external http endpoint.
  #Will only trigger a workflow run if the workflow file is on the default branch

  #Example
  # curl -X POST -H "Accept: application/vnd.github+json" -H "Authorization: token {your PAT w/ repo access}" \
  #  -d '{"event_type": "webhook", "client_payload": {"key":"value"}}' \ https://api.github.com/repos/....
  #https://github.com/TroyGuessford/Github-Examples
  repository_dispatch:
    types:
      - webhook

jobs:
  My_Cool_Job_Name: 
      #Specifying the wrong target here will cause the job to wait for a runner indefinately
      #runs-on: ubuntu-latets
      runs-on: ubuntu-latest
      steps:
        #Displays the server time to the workflow log
        - name: Do Work Son
          run: echo "The current server time is $(date)"
        #Checkout the main? branch
        - uses: actions/checkout@v2
        - name: Use The Input
          run: echo "You entered ${{ inputs.some_variable_name }} for the first variable and
            ${{ inputs.some_other_variable_name }} for the second variable."
        #Displays any client payload data that is supplied from the repository_dispatch
        - name: Repo Dispatch
          run: 'echo "You entered ${{ github.event.client_payload }}"'
        
        
